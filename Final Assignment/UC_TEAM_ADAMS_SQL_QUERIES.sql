/***********************************************
** File:   Adams final SQL File.sql
** Desc:   SQL File for the Project - 1
** Auth:   Team ADAMS: Harsh Solanki, Pradeep Kumar Madakasira, Priyanka Priya, R Shiva
** Date:   11/09/2019
************************************************/ 

-- MySQL Script generated by MySQL Workbench
-- Sun Sep  8 23:43:06 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

########################
# Creation of the Schema
########################

CREATE SCHEMA IF NOT EXISTS `UC_Final` DEFAULT CHARACTER SET utf8 ;

##########################################
# Creation of table - County
##########################################
CREATE TABLE IF NOT EXISTS `UC_Final`.`County` (
  `County_ID` INT(5) NOT NULL,
  `County` VARCHAR(50) NULL,
  `State_ID` INT(5) NOT NULL,
  PRIMARY KEY (`County_ID`))
ENGINE = InnoDB;

##########################################
# Creation of table - State
##########################################
CREATE TABLE IF NOT EXISTS `UC_Final`.`State` (
  `State_ID` INT(4) NOT NULL,
  `State` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`State_ID`));

##########################################
# Creation of table - Disease
##########################################
CREATE TABLE IF NOT EXISTS `UC_Final`.`Disease` (
  `Disease_Id` INT(7) NOT NULL,
  `Disease_Name` VARCHAR(70) NOT NULL,
  PRIMARY KEY (`Disease_Id`));

##########################################
# Creation of table - Mortality
##########################################
CREATE TABLE IF NOT EXISTS `UC_Final`.`Mortality` (
  `Mort_ID` INT(6) NOT NULL,
  `FIPS` INT(4) NULL,
  `County_ID` INT(5) NOT NULL,
  `Disease_ID` INT(7) NULL,
  `MR_2015`  DECIMAL(12,9) NULL,
  `MR_2015_Min` DECIMAL(12,9) NULL,
  `MR_2015_Max` DECIMAL(12,9) NULL,
  `MR_2017` DECIMAL(12,9) NULL,
  `MR_2017_Min` DECIMAL(12,9) NULL,
  `MR_2017_Max` DECIMAL(12,9) NULL,
  `Change_2015_2017` DECIMAL(12,9) NULL,
  `Change_2015_2017_Min` DECIMAL(30,15) NULL,
  `Change_2015_2017_Max` DECIMAL(30,15) NULL,
  PRIMARY KEY (`Mort_ID`),
  INDEX `County_ID_FK_idx` (`County_ID` ASC) VISIBLE,
  INDEX `Disease_ID_FK_idx` (`Disease_ID` ASC) VISIBLE,
  CONSTRAINT `County_ID_FK`
    FOREIGN KEY (`County_ID`)
    REFERENCES `mydb`.`County` (`County_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  
  CONSTRAINT `Disease_ID_FK`
    FOREIGN KEY (`Disease_ID`)
    REFERENCES `mydb`.`Disease` (`Disease_Id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
    ENGINE = InnoDB;

##########################################
# Creation of table - Census
##########################################
CREATE TABLE IF NOT EXISTS `UC_Final`.`Census` (
  `Census_Id` INT(4) NOT NULL,
  `CensusYear` INT(4) NULL,
  `County_ID` INT(5) NOT NULL,
  `Total_Pop` INT(9) NULL,
  `Men_Pop` INT(7) NULL,
  `Women_Pop` INT(7) NULL,
  `Hispanic_Pop` INT(7) NULL,
  `White_Pop` INT(7) NULL,
  `Black_Pop` INT(7) NULL,
  `Native_Pop` INT(7) NULL,
  `Asian_Pop` INT(7) NULL,
  `Pacific_Pop` INT(7) NULL,
  `Citizen_Pop` INT(7) NULL,
  `Income` INT(7) NULL,
  `IncomeErr` INT(5) NULL,
  `IncomePerCap` INT(6) NULL,
  `IncomePerCapErr` INT(5) NULL,
  `Poverty` DECIMAL(3,1) NULL,
  `ChildPoverty` DECIMAL(3,1) NULL,
  `Professional` DECIMAL(3,1) NULL,
  `Service` DECIMAL(3,1) NULL,
  `Office` DECIMAL(3,1) NULL,
  `Construction` DECIMAL(3,1) NULL,
  `Production` DECIMAL(3,1) NULL,
  `Drive` DECIMAL(3,1) NULL,
  `Carpool` DECIMAL(3,1) NULL,
  `Transit` DECIMAL(3,1) NULL,
  `Walk` DECIMAL(3,1) NULL,
  `OtherTransp` DECIMAL(3,1) NULL,
  `WorkAtHome` DECIMAL(3,1) NULL,
  `MeanCommute` DECIMAL(3,1) NULL,
  `Employed` INT(8) NULL,
  `PrivateWork` DECIMAL(3,1) NULL,
  `PublicWork` DECIMAL(3,1) NULL,
  `SelfEmployed` DECIMAL(3,1) NULL,
  `FamilyWork` DECIMAL(3,1) NULL,
  `Unemployment` DECIMAL(3,1) NULL,
  PRIMARY KEY (`Census_Id`),
  INDEX `County_ID_idx` (`County_ID` ASC) VISIBLE,
  CONSTRAINT `County_ID`
    FOREIGN KEY (`County_ID`)
    REFERENCES `mydb`.`County` (`County_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

##################################################################################################
# Loading of data from csv files in the Upload location to the tables created in the prvious steps
##################################################################################################
SHOW VARIABLES LIKE "secure_file_priv";

LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/UC_County.csv' INTO TABLE County
FIELDS TERMINATED BY ','  
OPTIONALLY ENCLOSED BY '"' 
LINES TERMINATED BY '\r\n';

LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/UC_State.csv' INTO TABLE State
FIELDS TERMINATED BY ','  
OPTIONALLY ENCLOSED BY '"' 
LINES TERMINATED BY '\r\n';

LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/UC_Disease.csv' INTO TABLE Disease
FIELDS TERMINATED BY ','  
OPTIONALLY ENCLOSED BY '"' 
LINES TERMINATED BY '\r\n';

LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/UC_Census.csv' INTO TABLE Census
FIELDS TERMINATED BY ','  
OPTIONALLY ENCLOSED BY '"' 
LINES TERMINATED BY '\r\n';

LOAD DATA INFILE 'C:/ProgramData/MySQL/MySQL Server 8.0/Uploads/UC_Mortality.csv' INTO TABLE Mortality
FIELDS TERMINATED BY ','  
OPTIONALLY ENCLOSED BY '"' 
LINES TERMINATED BY '\r\n'; 

##################
# Finding Insights
##################

#### QUERY 1 #############################################################################################################################################################################
# Selecting the county with the highest mortality rate for 'nutritional deficiency', and then checking their correlation with poverty
# Result: In the year 2017 Fallon from Montana has the most number of deaths due to nutritional deficiencies with 170 people more susceptible to the disease because of poverty . 
###################################################################################################################################################################################

Select	s.state AS State, 
		c.County AS County,
        round((cen.total_pop*cen.poverty)/100) AS Population_in_Poverty
	From  mortality m 
left join disease d ON m.disease_id = d.disease_id
left join county c ON m.county_id = c.county_id
left join census cen ON m.County_ID = cen.County_ID
left join state s ON c.State_ID = s.State_ID
where cen.County_ID IN 
(select* from 
	(select County_ID 
		from mortality 
	where disease_id = '1000016' 
		group by County_ID 
	order by AVG(MR_2017) 
		desc Limit 1 ) temp_tab )
and cen.CensusYear = '2017' 
	group by c.County_ID;


####### QUERY 2 #######################################################################################
# Selecting the county which has the maximum non-citizens and has the highest employment opportunities 
# Result: LA from CA is the most welcoming place in USA for opportunity seekers across the globe.  
#####################################################################################################

Select  
	state.state AS State, 
    coun.county AS County, 
    round(((censu.Total_Pop-censu.Citizen_Pop)*(100-censu.Unemployment))/100 ) AS EmployedImmigrants
FROM census censu
	left join county coun ON censu.County_ID = coun.County_ID
	Left join state state ON coun.State_ID = state.State_ID
where censu.CensusYear = '2017'
	group by censu.County_ID 
	order by ((censu.Total_Pop-censu.Citizen_Pop)*(100-censu.Unemployment))/100 desc limit 1;

####### QUERY 3 ############################################################################################################
# Finding the poverty level in the county with the highest increase in mortality rate for Maternal Distorder
# Result : Women in Macon, Illnois have seen highest increase in Maternal disorders with around 10.5k women are under poverty. 
###################################################################################################################

Select	c.County_id AS County_ID, 
		s.state AS State, 
		c.County AS County, 
        round(cen.Women_Pop*(cen.poverty/100)) AS Women_Under_Poverty
        
From  mortality m 
		left join disease d ON m.disease_id = d.disease_id
		left join county c ON m.county_id = c.county_id
		left join census cen ON m.County_ID = cen.County_ID
		left join state s ON c.State_ID = s.State_ID
where cen.County_ID IN 
		(select* from 
			(select County_ID from mortality 
				where disease_id = '1000009' 
			group by County_ID order by (Change_2015_2017) desc Limit 1 ) 
		temp_tab ) 
group by cen.County_ID order by (m.Change_2015_2017) desc limit 1;


#######QUERY 4 #########################################################################################################################################################
# Selecting the county which has the highest cardiovascular deaths and checking its relation with per capita income. 
# Result: People in Franklin Parish, Louisiana get the highest cardiovascular diseases. 
#However, East Carroll Parish has the least per capita income in the same state
# Its interesting to notice, that the nearby counties to FP follow a similar trend  
################################################################################################################################################################

Select 
	censu.IncomePerCap AS PerCapitaIncome, 
    censu.County_ID AS County_ID, 
    coun.County AS County, 
    state.state AS State_ID, 
    disease.Disease_Name AS Disease_Name
from  census censu
left join county coun ON censu.County_ID = coun.County_ID
Left join state state ON coun.State_ID = state.State_ID
Left join mortality mortality ON censu.County_ID = mortality.County_ID
Left join disease disease ON mortality.Disease_ID = disease.Disease_Id
where coun.State_ID IN 
(select* from
	 ( Select c.State_ID
	From  mortality m 
	left join disease d ON m.disease_id = d.disease_id
	left join county c ON m.county_id = c.county_id
	left join census cen ON m.County_ID = cen.County_ID
	left join state s ON c.State_ID = s.State_ID
	where cen.County_ID IN 
		(select* from 
			(select County_ID from 
			mortality where disease_id = '1000001' 
		group by County_ID order by MAX(MR_2017) desc Limit 1 
			) temp_tab )
	and cen.CensusYear = '2017' limit 1 )temp_tab )
and disease.Disease_Name IS NOT NULL AND disease.Disease_Id = '1000001'
Order by censu.IncomePerCap asc
;

####### QUERY 5 ############################################################################################################################################################
# Selecting the county with the higheest Diabetic Deaths and finding its correlation with Poverty, Percapita Income, Nature of Job
# Result: More than half the population in Oglala Lakota County is under poverty and records the highest diabetic deaths in USA, inspite of being employed by Govt.  
###################################################################################################################################################################

Select censu.CensusYear AS Year,
	coun.County AS County_Name, 
    censu.IncomePerCap AS Income_Per_Capita,
    state.state AS State_Name,
    censu.PublicWork AS Public_Work,	
    censu.PrivateWork AS Private_Word, 
    censu.poverty AS Poverty, 
    censu.SelfEmployed AS Self_Employed, 
    censu.FamilyWork AS Family_Work, 
    censu.County_ID 
from  census censu
left join county coun ON censu.County_ID = coun.County_ID Left join state state ON coun.State_ID = state.State_ID
where coun.State_ID IN 
(select* from ( Select c.State_ID
	From  mortality m 
	left join disease d ON m.disease_id = d.disease_id
	left join county c ON m.county_id = c.county_id
	left join census cen ON m.County_ID = cen.County_ID
	left join state s ON c.State_ID = s.State_ID
	where cen.County_ID IN 
		(select* from (select County_ID 
				from mortality 
			where disease_id = '1000004' 
				group by County_ID 
                order by MAX(MR_2017) desc Limit 1 ) 
		temp_tab )and cen.CensusYear = '2017' limit 1 )temp_tab )
and censu.CensusYear = '2017'
Order by (censu.IncomePerCap) asc;

####### QUERY 6 ############################################################################################################
# Finding counties with highest Maternal Distorder and correlating it with asian population
# Result : Women in Macon, Illinois have seen highest Asians women with Maternal disorders 
###################################################################################################################

Select	county AS County, 
		s.state_id AS State_ID,
        s.State AS State,
		cen.Women_Pop*Asian_Pop AS Asian_Women_Pop
From  mortality m 
left join disease d ON m.disease_id = d.disease_id
left join county c ON m.county_id = c.county_id
left join state s ON c.state_id = s.state_id
left join census cen ON m.county_id = cen.county_id
where cen.county_id IN 
(select* from (select county_id 
		from mortality
        where disease_id = '1000009' 
        group by county_id order by MAX(Change_2015_2017)desc limit 1 
        ) temp_tab ) 
group by (cen.county_ID) order by cen.Women_Pop*Asian_pop desc
limit  3;

